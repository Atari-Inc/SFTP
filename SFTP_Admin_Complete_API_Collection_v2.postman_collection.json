{
  "info": {
    "name": "SFTP Admin Dashboard - Complete API Collection v2.0",
    "description": "Complete API collection for SFTP Admin Dashboard with user management, folder assignments, S3 integration, and home directory management",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3001/api",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "file_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "log_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Authenticate user and get access token"
          },
          "response": []
        },
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"newuser\",\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            },
            "description": "Get current authenticated user information"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Refresh authentication token"
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            },
            "description": "Logout and invalidate token"
          },
          "response": []
        }
      ],
      "description": "Authentication and authorization endpoints"
    },
    {
      "name": "üë• Users Management",
      "item": [
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users?page=1&limit=10&search=",
              "host": ["{{base_url}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number (default: 1)"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page (default: 10, max: 100)"
                },
                {
                  "key": "search",
                  "value": "",
                  "description": "Search term for username or email"
                }
              ]
            },
            "description": "Get paginated list of users with search capability"
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Get detailed information about a specific user"
          },
          "response": []
        },
        {
          "name": "Create User with Folders",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"testuser@company.com\",\n  \"password\": \"password123\",\n  \"role\": \"user\",\n  \"home_directory\": \"/users\",\n  \"ssh_public_key\": \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7vbqajDhA... user@hostname\",\n  \"folder_assignments\": [\n    {\n      \"folder_path\": \"/test-uploads\",\n      \"permission\": \"write\"\n    },\n    {\n      \"folder_path\": \"/TestFolder\",\n      \"permission\": \"read\"\n    },\n    {\n      \"folder_path\": \"/test-solutions\",\n      \"permission\": \"full\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Create a new user with home directory and folder assignments"
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"updateduser\",\n  \"email\": \"updated@company.com\",\n  \"role\": \"admin\",\n  \"home_directory\": \"/users\",\n  \"folder_assignments\": [\n    {\n      \"folder_path\": \"/test-uploads\",\n      \"permission\": \"full\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Update user information including home directory and folder assignments"
          },
          "response": []
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Delete a user and their SFTP access"
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"newusername\",\n  \"email\": \"newemail@company.com\",\n  \"currentPassword\": \"oldpassword\",\n  \"newPassword\": \"newpassword123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/users/profile",
              "host": ["{{base_url}}"],
              "path": ["users", "profile"]
            },
            "description": "Update current user's profile information"
          },
          "response": []
        }
      ],
      "description": "User management with home directory and folder assignments"
    },
    {
      "name": "üìÅ Folder Management",
      "item": [
        {
          "name": "Get User Folders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}/folders",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}", "folders"]
            },
            "description": "Get all folder assignments for a specific user"
          },
          "response": []
        },
        {
          "name": "Update User Folders",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"folder_path\": \"/users\",\n    \"permission\": \"full\"\n  },\n  {\n    \"folder_path\": \"/test-uploads\",\n    \"permission\": \"write\"\n  },\n  {\n    \"folder_path\": \"/TestFolder\",\n    \"permission\": \"read\"\n  },\n  {\n    \"folder_path\": \"/test-solutions\",\n    \"permission\": \"write\"\n  },\n  {\n    \"folder_path\": \"/Test\",\n    \"permission\": \"read\"\n  }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}/folders",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}", "folders"]
            },
            "description": "Update folder assignments for a user with your S3 folders"
          },
          "response": []
        }
      ],
      "description": "Manage user folder assignments and permissions"
    },
    {
      "name": "üóÇÔ∏è S3 Folders",
      "item": [
        {
          "name": "List S3 Folders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/folders",
              "host": ["{{base_url}}"],
              "path": ["folders"]
            },
            "description": "Get all folders from your S3 bucket (atari-files-transfer)"
          },
          "response": [
            {
              "name": "Example Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/folders",
                  "host": ["{{base_url}}"],
                  "path": ["folders"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "[\n  {\n    \"path\": \"/users\",\n    \"name\": \"users\",\n    \"type\": \"folder\",\n    \"level\": 1\n  },\n  {\n    \"path\": \"/test-uploads\",\n    \"name\": \"test-uploads\",\n    \"type\": \"folder\",\n    \"level\": 1\n  },\n  {\n    \"path\": \"/TestFolder\",\n    \"name\": \"TestFolder\",\n    \"type\": \"folder\",\n    \"level\": 1\n  },\n  {\n    \"path\": \"/Test\",\n    \"name\": \"Test\",\n    \"type\": \"folder\",\n    \"level\": 1\n  },\n  {\n    \"path\": \"/test-solutions\",\n    \"name\": \"test-solutions\",\n    \"type\": \"folder\",\n    \"level\": 1\n  }\n]"
            }
          ]
        },
        {
          "name": "Get S3 Bucket Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/folders/bucket-info",
              "host": ["{{base_url}}"],
              "path": ["folders", "bucket-info"]
            },
            "description": "Get information about your S3 bucket"
          },
          "response": []
        }
      ],
      "description": "S3 bucket folder management and information"
    },
    {
      "name": "üîë SFTP Management",
      "item": [
        {
          "name": "Get SFTP User Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}/sftp",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}", "sftp"]
            },
            "description": "Get SFTP user information from AWS Transfer Family"
          },
          "response": []
        },
        {
          "name": "Update SFTP SSH Key",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ssh_public_key\": \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7vbqajDhA1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqrstuvwxyz1234567890abcdefghijklmnopqrstuvwxyz user@hostname\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}/sftp/ssh-key",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}", "sftp", "ssh-key"]
            },
            "description": "Update SSH public key for SFTP access"
          },
          "response": []
        },
        {
          "name": "List SFTP Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/sftp/list",
              "host": ["{{base_url}}"],
              "path": ["users", "sftp", "list"]
            },
            "description": "List all SFTP users from AWS Transfer Family"
          },
          "response": []
        }
      ],
      "description": "AWS Transfer Family SFTP user management"
    },
    {
      "name": "üìÑ Files Management",
      "item": [
        {
          "name": "List Files",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/files?path=/",
              "host": ["{{base_url}}"],
              "path": ["files"],
              "query": [
                {
                  "key": "path",
                  "value": "/",
                  "description": "Path to list files from"
                }
              ]
            },
            "description": "List files and folders at specified path"
          },
          "response": []
        },
        {
          "name": "Upload File",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": [],
                  "description": "File to upload"
                },
                {
                  "key": "path",
                  "value": "/test-uploads",
                  "type": "text",
                  "description": "Destination path"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/files/upload",
              "host": ["{{base_url}}"],
              "path": ["files", "upload"]
            },
            "description": "Upload a file to specified S3 folder"
          },
          "response": []
        },
        {
          "name": "Download File",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/files/{{file_id}}/download",
              "host": ["{{base_url}}"],
              "path": ["files", "{{file_id}}", "download"]
            },
            "description": "Download a file"
          },
          "response": []
        },
        {
          "name": "Delete Files",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileIds\": [\"file_id_1\", \"file_id_2\"]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/files",
              "host": ["{{base_url}}"],
              "path": ["files"]
            },
            "description": "Delete multiple files"
          },
          "response": []
        },
        {
          "name": "Create Folder",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"new-project-folder\",\n  \"path\": \"/users\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/files/folder",
              "host": ["{{base_url}}"],
              "path": ["files", "folder"]
            },
            "description": "Create a new folder in S3"
          },
          "response": []
        },
        {
          "name": "Move Files",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fileIds\": [\"file_id_1\", \"file_id_2\"],\n  \"targetPath\": \"/TestFolder\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/files/move",
              "host": ["{{base_url}}"],
              "path": ["files", "move"]
            },
            "description": "Move files to different S3 folder"
          },
          "response": []
        },
        {
          "name": "Rename File",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"renamed-file.txt\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/files/{{file_id}}/rename",
              "host": ["{{base_url}}"],
              "path": ["files", "{{file_id}}", "rename"]
            },
            "description": "Rename a file in S3"
          },
          "response": []
        },
        {
          "name": "Get File Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/files/{{file_id}}",
              "host": ["{{base_url}}"],
              "path": ["files", "{{file_id}}"]
            },
            "description": "Get detailed information about a file"
          },
          "response": []
        }
      ],
      "description": "File and folder operations on S3"
    },
    {
      "name": "üìä Activity Logs",
      "item": [
        {
          "name": "Get Activity Logs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/activity?page=1&limit=20&startDate=2024-01-01&endDate=2024-12-31&action=login&userId={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["activity"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Items per page"
                },
                {
                  "key": "startDate",
                  "value": "2024-01-01",
                  "description": "Start date filter"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31",
                  "description": "End date filter"
                },
                {
                  "key": "action",
                  "value": "login",
                  "description": "Action type filter"
                },
                {
                  "key": "userId",
                  "value": "{{user_id}}",
                  "description": "User ID filter"
                }
              ]
            },
            "description": "Get filtered activity logs with pagination"
          },
          "response": []
        },
        {
          "name": "Get Activity Log by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/activity/{{log_id}}",
              "host": ["{{base_url}}"],
              "path": ["activity", "{{log_id}}"]
            },
            "description": "Get detailed information about specific activity log"
          },
          "response": []
        },
        {
          "name": "Export Activity Logs (CSV)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/activity/export?startDate=2024-01-01&endDate=2024-12-31&format=csv",
              "host": ["{{base_url}}"],
              "path": ["activity", "export"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01",
                  "description": "Start date for export"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31",
                  "description": "End date for export"
                },
                {
                  "key": "format",
                  "value": "csv",
                  "description": "Export format: csv or json"
                }
              ]
            },
            "description": "Export activity logs to CSV or JSON format"
          },
          "response": []
        },
        {
          "name": "Export Activity Logs (JSON)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/activity/export?startDate=2024-01-01&endDate=2024-12-31&format=json",
              "host": ["{{base_url}}"],
              "path": ["activity", "export"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                },
                {
                  "key": "format",
                  "value": "json"
                }
              ]
            },
            "description": "Export activity logs in JSON format"
          },
          "response": []
        }
      ],
      "description": "Activity logging and audit trail"
    },
    {
      "name": "üìà Statistics",
      "item": [
        {
          "name": "Get Dashboard Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stats/dashboard",
              "host": ["{{base_url}}"],
              "path": ["stats", "dashboard"]
            },
            "description": "Get overall dashboard statistics"
          },
          "response": []
        },
        {
          "name": "Get Storage Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stats/storage",
              "host": ["{{base_url}}"],
              "path": ["stats", "storage"]
            },
            "description": "Get S3 storage usage statistics"
          },
          "response": []
        },
        {
          "name": "Get User Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stats/users",
              "host": ["{{base_url}}"],
              "path": ["stats", "users"]
            },
            "description": "Get user-related statistics"
          },
          "response": []
        },
        {
          "name": "Get Activity Stats (24h)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stats/activity?period=24h",
              "host": ["{{base_url}}"],
              "path": ["stats", "activity"],
              "query": [
                {
                  "key": "period",
                  "value": "24h",
                  "description": "Time period: 24h, 7d, or 30d"
                }
              ]
            },
            "description": "Get activity statistics for last 24 hours"
          },
          "response": []
        },
        {
          "name": "Get Activity Stats (7 days)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stats/activity?period=7d",
              "host": ["{{base_url}}"],
              "path": ["stats", "activity"],
              "query": [
                {
                  "key": "period",
                  "value": "7d"
                }
              ]
            },
            "description": "Get activity statistics for last 7 days"
          },
          "response": []
        },
        {
          "name": "Get Activity Stats (30 days)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/stats/activity?period=30d",
              "host": ["{{base_url}}"],
              "path": ["stats", "activity"],
              "query": [
                {
                  "key": "period",
                  "value": "30d"
                }
              ]
            },
            "description": "Get activity statistics for last 30 days"
          },
          "response": []
        }
      ],
      "description": "System statistics and analytics"
    },
    {
      "name": "‚öôÔ∏è Settings",
      "item": [
        {
          "name": "Get Settings",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/settings",
              "host": ["{{base_url}}"],
              "path": ["settings"]
            },
            "description": "Get current system settings"
          },
          "response": []
        },
        {
          "name": "Update Settings",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"maxFileSize\": \"500MB\",\n  \"allowedFileTypes\": \"pdf,doc,docx,txt,jpg,jpeg,png,gif,zip,rar\",\n  \"sessionTimeout\": 3600,\n  \"enableRegistration\": false,\n  \"enableGuestAccess\": false,\n  \"maintenanceMode\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/settings",
              "host": ["{{base_url}}"],
              "path": ["settings"]
            },
            "description": "Update system settings"
          },
          "response": []
        },
        {
          "name": "Get System Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/settings/system",
              "host": ["{{base_url}}"],
              "path": ["settings", "system"]
            },
            "description": "Get system information and health status"
          },
          "response": []
        }
      ],
      "description": "System configuration and settings"
    },
    {
      "name": "üè• Health Checks",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3001/health",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3001",
              "path": ["health"]
            },
            "description": "Check server health status"
          },
          "response": [
            {
              "name": "Healthy Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "http://localhost:3001/health",
                  "protocol": "http",
                  "host": ["localhost"],
                  "port": "3001",
                  "path": ["health"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [],
              "cookie": [],
              "body": "{\n  \"status\": \"healthy\",\n  \"environment\": \"development\"\n}"
            }
          ]
        },
        {
          "name": "Root Endpoint",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:3001/",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3001",
              "path": [""]
            },
            "description": "Get API information"
          },
          "response": []
        }
      ],
      "description": "System health and status endpoints"
    },
    {
      "name": "üß™ Test Scenarios",
      "item": [
        {
          "name": "Complete User Workflow",
          "item": [
            {
              "name": "1. Login as Admin",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"password123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/auth/login",
                  "host": ["{{base_url}}"],
                  "path": ["auth", "login"]
                },
                "description": "Step 1: Login as admin"
              },
              "response": []
            },
            {
              "name": "2. Get S3 Folders",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/folders",
                  "host": ["{{base_url}}"],
                  "path": ["folders"]
                },
                "description": "Step 2: Get available S3 folders"
              },
              "response": []
            },
            {
              "name": "3. Create User with Folders",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"testuser@company.com\",\n  \"password\": \"password123\",\n  \"role\": \"user\",\n  \"home_directory\": \"/users\",\n  \"folder_assignments\": [\n    {\n      \"folder_path\": \"/test-uploads\",\n      \"permission\": \"write\"\n    },\n    {\n      \"folder_path\": \"/TestFolder\",\n      \"permission\": \"read\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/users",
                  "host": ["{{base_url}}"],
                  "path": ["users"]
                },
                "description": "Step 3: Create user with folder assignments"
              },
              "response": []
            },
            {
              "name": "4. Update User Folders",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"folder_path\": \"/test-uploads\",\n    \"permission\": \"full\"\n  },\n  {\n    \"folder_path\": \"/test-solutions\",\n    \"permission\": \"write\"\n  }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base_url}}/users/{{user_id}}/folders",
                  "host": ["{{base_url}}"],
                  "path": ["users", "{{user_id}}", "folders"]
                },
                "description": "Step 4: Update user folder permissions"
              },
              "response": []
            },
            {
              "name": "5. Get User Folders",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/users/{{user_id}}/folders",
                  "host": ["{{base_url}}"],
                  "path": ["users", "{{user_id}}", "folders"]
                },
                "description": "Step 5: Verify folder assignments"
              },
              "response": []
            }
          ],
          "description": "Complete workflow for creating and managing users with folders"
        }
      ],
      "description": "Pre-configured test scenarios for common workflows"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set variables from login response",
          "if (pm.response && pm.response.json() && pm.response.json().access_token) {",
          "    pm.environment.set('access_token', pm.response.json().access_token);",
          "}"
        ]
      }
    }
  ]
}